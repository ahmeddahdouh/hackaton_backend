"""lets go

Revision ID: 5b155a609845
Revises: 
Create Date: 2024-12-13 09:49:02.807891

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '5b155a609845'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('role', sa.Enum('Administrateur', 'Utilisateur', 'CA', 'Manager', name='userrole'), nullable=False),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('grade', sa.Enum('chargeAffaire', 'seniorManager', 'executiveManager', 'eliteManager', 'aucun', name='usergrade'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('generated_kwc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('generated_due', sa.DateTime(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generated_kwc_id'), 'generated_kwc', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('project_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('project_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('parcelle', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('power_kwc', sa.Float(), nullable=True),
    sa.Column('date_completude', sa.Date(), nullable=True),
    sa.Column('date_pdb', sa.Date(), nullable=True),
    sa.Column('amount_due_client', sa.Float(), nullable=True),
    sa.Column('apporteur_affaire', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('client_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('client_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('team_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_id'), 'team', ['id'], unique=False)
    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commissions_id'), 'commissions', ['id'], unique=False)
    op.create_table('teammember',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commission_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.ForeignKeyConstraint(['commission_id'], ['commissions.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_table('teammember')
    op.drop_index(op.f('ix_commissions_id'), table_name='commissions')
    op.drop_table('commissions')
    op.drop_index(op.f('ix_team_id'), table_name='team')
    op.drop_table('team')
    op.drop_table('projects')
    op.drop_index(op.f('ix_generated_kwc_id'), table_name='generated_kwc')
    op.drop_table('generated_kwc')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
